#include <ESP8266WiFi.h>
#include <WiFiClientSecure.h>
#include <PubSubClient.h>

const char* ssid = "Dien Mat Troi PHU HUNG";
const char* password = "phuhung$$";

const char* mqtt_server = "53052f65a6404b3b90d30c8b2fdcf5b1.s1.eu.hivemq.cloud";
const int mqtt_port = 8883;

// Username & Password c·ªßa HiveMQ Cloud c·ªßa b·∫°n
const char* mqtt_user = "hivemq.webclient.1745053412141";
const char* mqtt_pass = "WR.aZBu?6tD0%4qk*5Ig";

WiFiClientSecure espClient;
PubSubClient client(espClient);

const char* deviceSerialNumber = "EM113";

void setup() {
  Serial.begin(115200);
  Serial.println("Kh·ªüi ƒë·ªông thi·∫øt b·ªã...");

  WiFi.begin(ssid, password);
  Serial.print("ƒêang k·∫øt n·ªëi WiFi");

  while (WiFi.status() != WL_CONNECTED) {
    delay(500);
    Serial.print(".");
  }
  Serial.println("\nWiFi ƒë√£ k·∫øt n·ªëi th√†nh c√¥ng");

  // T·∫°m th·ªùi t·∫Øt verify cert cho d·ªÖ dev
  espClient.setInsecure();

  client.setServer(mqtt_server, mqtt_port);
  client.setCallback(callback);

  Serial.println("ƒêang k·∫øt n·ªëi ƒë·∫øn MQTT Cloud...");

  while (!client.connected()) {
    Serial.print("K·∫øt n·ªëi MQTT...");
    // Th√™m username/password
    if (client.connect(deviceSerialNumber, mqtt_user, mqtt_pass)) {
      Serial.println(" Th√†nh c√¥ng");
      String subTopic = "home/device/" + String(deviceSerialNumber);
      client.subscribe(subTopic.c_str());
      Serial.print("ƒê√£ subscribe topic: ");
      Serial.println(subTopic);
    } else {
      Serial.print(" Th·∫•t b·∫°i, l·ªói code: ");
      Serial.print(client.state());
      Serial.println(" th·ª≠ l·∫°i sau 5s");
      delay(5000);
    }
  }
}

void callback(char* topic, byte* payload, unsigned int length) {
  Serial.print("\nüì© Tin nh·∫Øn t·ª´ [");
  Serial.print(topic);
  Serial.print("]: ");

  String message;
  for (int i = 0; i < length; i++) {
    message += (char)payload[i];
  }
  Serial.println(message);

  if (message == "active") {
    Serial.println("‚ö° ƒê√®n b·∫≠t");
  } else if (message == "inactive") {
    Serial.println("üí§ ƒê√®n t·∫Øt");
  } else {
    Serial.println("‚ùì L·ªánh kh√¥ng h·ª£p l·ªá");
  }
}

void reconnect() {
  while (!client.connected()) {
    Serial.print("ƒêang reconnect MQTT...");
    if (client.connect(deviceSerialNumber, mqtt_user, mqtt_pass)) {
      Serial.println(" Th√†nh c√¥ng");
      String subTopic = "home/device/" + String(deviceSerialNumber);
      client.subscribe(subTopic.c_str());
    } else {
      Serial.print(" Th·∫•t b·∫°i, l·ªói: ");
      Serial.println(client.state());
      delay(5000);
    }
  }
}

void loop() {
  if (!client.connected()) {
    reconnect();
  }
  client.loop();
}
